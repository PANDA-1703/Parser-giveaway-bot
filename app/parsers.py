import re
from datetime import datetime
from handler_auto import logger
import dateparser


def parse_giveaway_text(text):
    """Анализ текста для извлечения даты и времени."""
    # Добавляем паттерны для учёта форматирования текста (Markdown/HTML)
    date_time_patterns = [
        # Базовые паттерны (без форматирования)
        r"(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})\s*в\s*(\d{1,2}:\d{2})",  # 24.03.2025 в 19:00
        r"(\d{1,2}\s*[а-я]+\s*\d{2,4})\s*в\s*(\d{1,2}:\d{2})",  # 24 марта 2025 в 19:00
        r"(\d{1,2}\s*[а-я]+)\s*в\s*(\d{1,2}:\d{2})",  # 24 марта в 19:00
        r"(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})\s+(\d{1,2}:\d{2})",  # 24.03.2025 19:00
        r"(\d{1,2}\s*[а-я]+\s*\d{2,4})\s+(\d{1,2}:\d{2})",  # 24 марта 2025 19:00
        r"(\d{1,2}\s*[а-я]+)\s+(\d{1,2}:\d{2})",  # 24 марта 19:00
        r"(\d{1,2}:\d{2}),\s*(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})",  # 19:00, 24.03.2025
        r"(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})",  # 24.03.2025
        r"(\d{1,2}\s*[а-я]+\s*\d{2,4})",  # 24 марта 2025
        r"(\d{1,2}\s*[а-я]+)",  # 24 марта
        r"(\d{1,2}\s*[а-я].)",  # 24 марта.
        r"(\d{1,2}\s*[а-я]+),\s*в\s*(\d{1,2}:\d{2})",  # 20 марта, в 14:00
        r"(\d{1,2}\s*[а-я]+)\s*,\s*(\d{1,2}:\d{2})",  # 20 марта, 14:00
        r"(\d{1,2}\s*[а-я]+)\s*-\s*(\d{1,2}:\d{2})",  # 20 марта - 14:00
        r"(\d{1,2}\s*[а-я]+)\s+в\s+(\d{1,2}:\d{2})",  # 20 марта в 14:00 (без запятой)
        r"(\d{1,2}[.\-/]\d{1,2})\s*в\s*(\d{1,2}:\d{2})",  # 31.03 в 19:00
        r"(\d{1,2}[.\-/]\d{1,2}),\s*(\d{1,2}:\d{2})",  # 31.03, 19:00

        # Паттерны с форматированием (Markdown/HTML)
        r"\*{1,2}(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})\*{1,2}\s*в\s*\*{1,2}(\d{1,2}:\d{2})\*{1,2}",  # **24.03.2025** в **19:00**
        r"\*{1,2}(\d{1,2}\s*[а-я]+\s*\d{2,4})\*{1,2}\s*в\s*\*{1,2}(\d{1,2}:\d{2})\*{1,2}",  # **24 марта 2025** в **19:00**
        r"\*{1,2}(\d{1,2}\s*[а-я]+)\*{1,2}\s*в\s*\*{1,2}(\d{1,2}:\d{2})\*{1,2}",  # **24 марта** в **19:00**
        r"_{1,2}(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})_{1,2}\s*в\s*_{1,2}(\d{1,2}:\d{2})_{1,2}",  # __24.03.2025__ в __19:00__
        r"_{1,2}(\d{1,2}\s*[а-я]+\s*\d{2,4})_{1,2}\s*в\s*_{1,2}(\d{1,2}:\d{2})_{1,2}",  # __24 марта 2025__ в __19:00__
        r"_{1,2}(\d{1,2}\s*[а-я]+)_{1,2}\s*в\s*_{1,2}(\d{1,2}:\d{2})_{1,2}",  # __24 марта__ в __19:00__
        r"<b>(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})</b>\s*в\s*<b>(\d{1,2}:\d{2})</b>",  # <b>24.03.2025</b> в <b>19:00</b>
        r"<b>(\d{1,2}\s*[а-я]+\s*\d{2,4})</b>\s*в\s*<b>(\d{1,2}:\d{2})</b>",  # <b>24 марта 2025</b> в <b>19:00</b>
        r"<b>(\d{1,2}\s*[а-я]+)</b>\s*в\s*<b>(\d{1,2}:\d{2})</b>",  # <b>24 марта</b> в <b>19:00</b>
        r"<i>(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})</i>\s*в\s*<i>(\d{1,2}:\d{2})</i>",  # <i>24.03.2025</i> в <i>19:00</i>
        r"<i>(\d{1,2}\s*[а-я]+\s*\d{2,4})</i>\s*в\s*<i>(\d{1,2}:\d{2})</i>",  # <i>24 марта 2025</i> в <i>19:00</i>
        r"<i>(\d{1,2}\s*[а-я]+)</i>\s*в\s*<i>(\d{1,2}:\d{2})</i>",  # <i>24 марта</i> в <i>19:00</i>
        r"<u>(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})</u>\s*в\s*<u>(\d{1,2}:\d{2})</u>",  # <u>24.03.2025</u> в <u>19:00</u>
        r"<u>(\d{1,2}\s*[а-я]+\s*\d{2,4})</u>\s*в\s*<u>(\d{1,2}:\d{2})</u>",  # <u>24 марта 2025</u> в <u>19:00</u>
        r"<u>(\d{1,2}\s*[а-я]+)</u>\s*в\s*<u>(\d{1,2}:\d{2})</u>",  # <u>24 марта</u> в <u>19:00</u>

        # Случаи с разделением даты и времени
        r"(?:Итоги|Дата розыгрыша|подведём)\s*[—–]?\s*(\d{1,2})\s*([а-я]+)\.?\s*(?:в\s*)?(\d{1,2}:\d{2})",
        r"(?:Итоги|Дата розыгрыша|подведём)\s*[—–]?\s*(\d{1,2})\s*([а-я]+)(?:\s*\d{4})?",
    ]

    # Ищем полную дату (с годом) в тексте
    full_date_match = re.search(r"(\d{1,2}[.\-/]\d{1,2}[.\-/]\d{2,4})", text)
    if full_date_match:
        full_date = full_date_match.group(1)
    else:
        full_date = None

    for pattern in date_time_patterns:
        match = re.search(pattern, text, re.IGNORECASE)
        if match:
            raw_date = match.group(1)
            raw_time = match.group(2) if len(match.groups()) > 1 else None

            # Преобразуем месяц в числовой формат
            months = {
                'январ': '01', 'феврал': '02', 'март': '03', 'апрел': '04',
                'ма': '05', 'июн': '06', 'июл': '07', 'август': '08',
                'сентябр': '09', 'октябр': '10', 'ноябр': '11', 'декабр': '12'
            }

            for month_name, month_num in months.items():
                if month_name in raw_date.lower():
                    raw_date = raw_date.lower().replace(month_name, month_num)

            # Если есть полная дата (с годом), используем её
            if full_date:
                parsed_date = dateparser.parse(full_date, settings={'DATE_ORDER': 'DMY'})
            else:
                parsed_date = dateparser.parse(raw_date, settings={'DATE_ORDER': 'DMY'})

            if parsed_date:
                date = parsed_date.strftime("%Y-%m-%d")
                time = raw_time
                if time is not None:
                    try:
                        datetime.strptime(time, "%H:%M")
                    except ValueError:
                        time = "18:00"
                else:
                    time = "18:00"
                logger.info(f"date: {date}, time: {time}")
                return {"date": date, "time": time}

    return None